/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaceUsuario;

import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import javax.swing.JOptionPane;
import locadoraveiculos.Cliente;
import locadoraveiculos.LocacaoVeiculo;
import locadoraveiculos.LocadoraDados;
import locadoraveiculos.Veiculo;

/**
 *
 * @author renan
 */
public class Locar extends javax.swing.JInternalFrame {
    
    private Veiculos telaVeiculos;
    private ListarLocacoes listarLocacoes;
    
    /**
     * Creates new form Locar
     */
    public Locar() {
        
        initComponents();
                
        
        comboCliente.addItem("");
        comboVeiculo.addItem("");
        
        for (int i=0; i < LocadoraDados.getClientes().size(); i++) {            
         comboCliente.addItem(LocadoraDados.getClientes().get(i).getNome()+ " | " + String.valueOf(LocadoraDados.getClientes().get(i).getID())); 
         
        }
        
        for (int i=0; i < LocadoraDados.getVeiculos().size(); i++) {            
         comboVeiculo.addItem(LocadoraDados.getVeiculos().get(i).getDescricao()+ " | " + String.valueOf(LocadoraDados.getVeiculos().get(i).getCodigoAuto())); 
         
        }
        telaVeiculos = new Veiculos(-1);
        telaVeiculos.setVisible(false);
        
        listarLocacoes = new ListarLocacoes();
        listarLocacoes.setVisible(false);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelCentral = new javax.swing.JPanel();
        txtValorDesconto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtValorSeguro = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        txtValorTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblDescontoReal = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblTotalSeguro = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblTotalDiaria = new javax.swing.JLabel();
        txtDias = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btExcliur = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btNova = new javax.swing.JButton();
        btReceber = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btAnterior = new javax.swing.JButton();
        btProximo = new javax.swing.JButton();
        txtDataInicial = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDataFinal = new javax.swing.JFormattedTextField();
        cbSeguro = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblcodVeiculo = new javax.swing.JLabel();
        lblIndice = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtValorDiaria = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        painelDadosCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox<>();
        lblCli = new javax.swing.JLabel();
        painelVeiculo = new javax.swing.JPanel();
        comboVeiculo = new javax.swing.JComboBox<>();
        txtNumPassageiros = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtTipoVeiculo = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btCadastro = new javax.swing.JButton();
        lblPossuiPartida = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Locar Veículo");
        setToolTipText("");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        painelCentral.setLayout(null);

        txtValorDesconto.setText("0,00");
        painelCentral.add(txtValorDesconto);
        txtValorDesconto.setBounds(404, 334, 57, 20);

        jLabel7.setText("R$ Seguro dia:");
        painelCentral.add(jLabel7);
        jLabel7.setBounds(162, 337, 71, 14);

        txtValorSeguro.setEditable(false);
        txtValorSeguro.setText("0,00");
        painelCentral.add(txtValorSeguro);
        txtValorSeguro.setBounds(237, 334, 82, 20);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        txtValorTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtValorTotal.setForeground(new java.awt.Color(255, 255, 255));
        txtValorTotal.setText("0,00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Valor Total:");

        lblDescontoReal.setForeground(new java.awt.Color(255, 255, 255));
        lblDescontoReal.setText("0,00");

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Desconto R$");

        lblTotalSeguro.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalSeguro.setText("0,00");

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Total seguro:");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Total Diária:");

        lblTotalDiaria.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalDiaria.setText("0,00");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotalDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotalSeguro, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescontoReal, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addGap(112, 112, 112)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel16)
                        .addComponent(lblTotalSeguro)
                        .addComponent(jLabel18)
                        .addComponent(lblDescontoReal)
                        .addComponent(lblTotalDiaria))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtValorTotal)))
                .addContainerGap())
        );

        painelCentral.add(jPanel2);
        jPanel2.setBounds(0, 420, 780, 45);

        txtDias.setEditable(false);
        txtDias.setText("1");
        painelCentral.add(txtDias);
        txtDias.setBounds(404, 308, 57, 20);

        jLabel2.setText("Dias:");
        painelCentral.add(jLabel2);
        jLabel2.setBounds(376, 311, 24, 14);

        btExcliur.setText("Excluir");
        btExcliur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcliurActionPerformed(evt);
            }
        });

        btSalvar.setBackground(new java.awt.Color(51, 153, 255));
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btNova.setText("Nova");
        btNova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovaActionPerformed(evt);
            }
        });

        btReceber.setBackground(new java.awt.Color(51, 255, 51));
        btReceber.setText("Receber");
        btReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReceberActionPerformed(evt);
            }
        });

        jButton2.setText("Listar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btAnterior.setText("<");
        btAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnteriorActionPerformed(evt);
            }
        });

        btProximo.setText(">");
        btProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProximoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNova)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcliur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(215, 215, 215)
                .addComponent(btSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btReceber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(btAnterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btProximo)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btProximo)
                        .addComponent(btAnterior))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btNova)
                        .addComponent(btSalvar)
                        .addComponent(btExcliur)
                        .addComponent(btReceber)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelCentral.add(jPanel3);
        jPanel3.setBounds(0, 0, 754, 45);

        txtDataInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataInicialFocusLost(evt);
            }
        });
        txtDataInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataInicialActionPerformed(evt);
            }
        });
        painelCentral.add(txtDataInicial);
        txtDataInicial.setBounds(71, 308, 74, 20);

        jLabel3.setText("Data Inicial:");
        painelCentral.add(jLabel3);
        jLabel3.setBounds(10, 311, 57, 14);

        jLabel4.setText("Data Final:");
        painelCentral.add(jLabel4);
        jLabel4.setBounds(163, 311, 52, 14);

        txtDataFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataFinalFocusLost(evt);
            }
        });
        txtDataFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataFinalActionPerformed(evt);
            }
        });
        painelCentral.add(txtDataFinal);
        txtDataFinal.setBounds(237, 308, 82, 20);

        cbSeguro.setText("Adicionar seguro");
        painelCentral.add(cbSeguro);
        cbSeguro.setBounds(526, 333, 105, 23);

        jLabel8.setText("Indice:");
        painelCentral.add(jLabel8);
        jLabel8.setBounds(0, 51, 33, 14);

        jLabel13.setText("Status:");
        painelCentral.add(jLabel13);
        jLabel13.setBounds(634, 51, 35, 14);

        lblcodVeiculo.setText(" ");
        painelCentral.add(lblcodVeiculo);
        lblcodVeiculo.setBounds(53, 201, 44, 14);

        lblIndice.setText("(Novo)");
        painelCentral.add(lblIndice);
        lblIndice.setBounds(43, 51, 33, 14);

        lblStatus.setText("(Não Definido)");
        painelCentral.add(lblStatus);
        lblStatus.setBounds(675, 51, 69, 14);

        jLabel9.setText("Valor Diária:");
        painelCentral.add(jLabel9);
        jLabel9.setBounds(10, 337, 58, 14);

        txtValorDiaria.setEditable(false);
        txtValorDiaria.setText("0,00");
        painelCentral.add(txtValorDiaria);
        txtValorDiaria.setBounds(72, 334, 72, 20);

        jLabel10.setText("Desconto %:");
        painelCentral.add(jLabel10);
        jLabel10.setBounds(337, 337, 63, 14);

        painelDadosCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Cliente"));
        painelDadosCliente.setLayout(null);

        jLabel1.setText("Cliente:");
        painelDadosCliente.add(jLabel1);
        jLabel1.setBounds(10, 20, 37, 14);

        comboCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboClienteItemStateChanged(evt);
            }
        });
        comboCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClienteActionPerformed(evt);
            }
        });
        painelDadosCliente.add(comboCliente);
        comboCliente.setBounds(60, 20, 680, 20);

        lblCli.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblCli.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCli.setToolTipText("");
        painelDadosCliente.add(lblCli);
        lblCli.setBounds(10, 50, 730, 22);

        painelCentral.add(painelDadosCliente);
        painelDadosCliente.setBounds(10, 80, 750, 90);

        painelVeiculo.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Veículo"));
        painelVeiculo.setLayout(null);

        comboVeiculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboVeiculoItemStateChanged(evt);
            }
        });
        comboVeiculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboVeiculoMouseClicked(evt);
            }
        });
        comboVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVeiculoActionPerformed(evt);
            }
        });
        painelVeiculo.add(comboVeiculo);
        comboVeiculo.setBounds(140, 30, 530, 20);

        txtNumPassageiros.setEditable(false);
        txtNumPassageiros.setText("0");
        painelVeiculo.add(txtNumPassageiros);
        txtNumPassageiros.setBounds(180, 60, 53, 20);

        jLabel11.setText("Nº Passageiros:");
        painelVeiculo.add(jLabel11);
        jLabel11.setBounds(100, 60, 76, 14);

        jLabel5.setText("Veículo");
        painelVeiculo.add(jLabel5);
        jLabel5.setBounds(100, 30, 33, 14);

        jLabel21.setText("Código:");
        painelVeiculo.add(jLabel21);
        jLabel21.setBounds(10, 30, 37, 14);

        txtTipoVeiculo.setText("(Tipo)");
        painelVeiculo.add(txtTipoVeiculo);
        txtTipoVeiculo.setBounds(10, 60, 79, 14);

        jLabel12.setText("Possui Partida:");
        painelVeiculo.add(jLabel12);
        jLabel12.setBounds(410, 60, 71, 14);

        btCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uiLocadora/img/veiculos50x50.png"))); // NOI18N
        btCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastroActionPerformed(evt);
            }
        });
        painelVeiculo.add(btCadastro);
        btCadastro.setBounds(680, 20, 60, 50);

        lblPossuiPartida.setText("(Partida)");
        painelVeiculo.add(lblPossuiPartida);
        lblPossuiPartida.setBounds(490, 60, 55, 14);

        painelCentral.add(painelVeiculo);
        painelVeiculo.setBounds(10, 170, 750, 90);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastroActionPerformed
        telaVeiculos = new Veiculos(LocadoraDados.localizaVeiculoPorCodigo(getCodVeiculo()));
        getParent().add(telaVeiculos);
        telaVeiculos.setVisible(true);
        
    }//GEN-LAST:event_btCadastroActionPerformed

    private void comboVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVeiculoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboVeiculoActionPerformed

    private void comboVeiculoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboVeiculoMouseClicked

    }//GEN-LAST:event_comboVeiculoMouseClicked

    private void comboVeiculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboVeiculoItemStateChanged
        int i = comboVeiculo.getSelectedIndex()-1;

        if(i < 0){
            i=0;
        }
        if(LocadoraDados.getVeiculos().size() <= 0){

        }else{

            //try{
                txtValorDiaria.setText(String.valueOf(LocadoraDados.getVeiculos().get(i).getValorDiaria()));
                txtNumPassageiros.setText(String.valueOf(LocadoraDados.getVeiculos().get(i).getPassageiros()));
                txtTipoVeiculo.setText(LocadoraDados.getVeiculos().get(i).getTipo());
                lblPossuiPartida.setText(LocadoraDados.getVeiculos().get(i).getPartida());
                lblcodVeiculo.setText(String.valueOf(LocadoraDados.getVeiculos().get(i).getCodigoAuto()));
                //}catch(ArrayIndexOutOfBoundsException e){
                //    System.out.println("Erro ao preencher combo");
                //}
            //preencheCampos(i);
        }
    }//GEN-LAST:event_comboVeiculoItemStateChanged

    private void comboClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClienteActionPerformed

    }//GEN-LAST:event_comboClienteActionPerformed

    private void comboClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboClienteItemStateChanged

    }//GEN-LAST:event_comboClienteItemStateChanged

    private void txtDataFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataFinalActionPerformed

    private void txtDataFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataFinalFocusLost
        //23/11/2018

        calculaDatas();
    }//GEN-LAST:event_txtDataFinalFocusLost

    private void txtDataInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataInicialActionPerformed

    private void txtDataInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataInicialFocusLost
        if(txtDataFinal.getText().isEmpty()){

        }else{
            calculaDatas();
        }
    }//GEN-LAST:event_txtDataInicialFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    //    listarLocacoes = new ListarLocacoes();
    //    listarLocacoes.setLocationRelativeTo(null);
    //    listarLocacoes.setVisible(true);
    
    
    
        listarLocacoes = new ListarLocacoes();
        getParent().add(listarLocacoes);
        listarLocacoes.setVisible(true);
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReceberActionPerformed

        if(LocadoraDados.getClientes().size() == 0){
            JOptionPane.showMessageDialog(null, "Cadastre um cliente e tente novamente");
        }else if(LocadoraDados.getVeiculos().size() == 0){
            JOptionPane.showMessageDialog(null, "Cadastre um veículo e tente novamente");
        }else if(getIndice() == -1){
            JOptionPane.showMessageDialog(null, "Essa locação não foi finalizada");
        }else if(LocadoraDados.getLocacao().get(getIndice()).getStatus().equals("RECEBIDO")){
            JOptionPane.showMessageDialog(null, "Essa locação já foi baixada");
        }else{

            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente confirmar o recebimento do veículo?", "Receber", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {

                try{
                    LocadoraDados.baixarLocacao(getIndice());
                    preencheCampos(getIndice());
                }catch(IllegalArgumentException e){
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }

            }
        }
    }//GEN-LAST:event_btReceberActionPerformed

    private void btNovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovaActionPerformed
        limpaCampos();
    }//GEN-LAST:event_btNovaActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        int i = comboCliente.getSelectedIndex()-1;
        int indiceLoc = LocadoraDados.getLocacao().size();

        boolean dadosValidos;
        LocacaoVeiculo loc = null;
        int j = comboVeiculo.getSelectedIndex()-1;

        if(LocadoraDados.getClientes().size() == 0){
            JOptionPane.showMessageDialog(null, "Cadastre um cliente e tente novamente");
        }else if(LocadoraDados.getVeiculos().size() == 0){
            JOptionPane.showMessageDialog(null, "Cadastre um veículo e tente novamente");
        }else if(comboCliente.getSelectedItem().toString().isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione um cliente");
        }else if(comboVeiculo.getSelectedItem().toString().isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione um veiculo");
            
            
        }else{

            Cliente cli;
            cli = new Cliente(LocadoraDados.getClientes().get(i).getNome(),
                String.valueOf(LocadoraDados.getClientes().get(i).getID()),
                LocadoraDados.getClientes().get(i).getEndereco(),
                LocadoraDados.getClientes().get(i).getTel());

            Veiculo veiculo;
            veiculo = new Veiculo(
                String.valueOf(LocadoraDados.getVeiculos().get(j).getCodigoAuto()),
                LocadoraDados.getVeiculos().get(j).getTipo(),
                String.valueOf(LocadoraDados.getVeiculos().get(j).getValorDiaria()),
                LocadoraDados.getVeiculos().get(j).getDescricao(),
                LocadoraDados.getVeiculos().get(j).getPlaca(),
                String.valueOf(LocadoraDados.getVeiculos().get(j).getPassageiros()),
                LocadoraDados.getVeiculos().get(j).getPartida(),
                LocadoraDados.getVeiculos().get(j).getMarca(),
                LocadoraDados.getVeiculos().get(j).isDisponivel()

            );

            try{
                loc = new LocacaoVeiculo(veiculo,
                    cli,
                    txtValorDiaria.getText(),
                    txtDias.getText(),
                    txtValorDesconto.getText(),
                    false,
                    txtDataInicial.getText(),
                    txtDataFinal.getText(),
                    cbSeguro.isSelected()

                );
                loc.setStatus("LOCADO"); //Status da locação
                
                if((getIndice() == -1)){  //Adiciona uma nova locação
                        
                        lblIndice.setText(String.valueOf(LocadoraDados.getLocacao().size()));
                        LocadoraDados.cadastraLocacao(loc);
                        
                        preencheCampos(indiceLoc);
                    
                }else{

                    int resposta = JOptionPane.showConfirmDialog(null, "Deseja alterar os dados?", "Confirmar ação", JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {

                        
                        LocadoraDados.alteraLocacao(getIndice(), loc);
                        preencheCampos(getIndice());
                        
                    }else{
                        preencheCampos(getIndice());
                    }
                }
                
                
                
              
            }catch(IllegalArgumentException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btExcliurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcliurActionPerformed
        if(lblIndice.getText().equals("(Novo)")){
            JOptionPane.showMessageDialog(null, "Não há nada para excluir");
        }else{

            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir esse registro?", "Receber", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                if(lblIndice.getText().equals("(Novo)")){

                }else{

                    int minIndice = 0, maxIndice, indice;
                    maxIndice = LocadoraDados.getVeiculos().size()-1;
                    System.out.print(maxIndice);
                    try{
                        indice = Integer.parseInt(lblIndice.getText());
                    }catch(NumberFormatException e){
                        indice = maxIndice;
                    }
                    if((indice >= 0) && (indice <= maxIndice)){

                        if(maxIndice>0 && indice < maxIndice){
                            DisponibilizaVeiculo();
                            LocadoraDados.removeLocacao(indice);
                            limpaCampos();
                        }

                        if((indice == 0) && (maxIndice == 0)){
                            DisponibilizaVeiculo();
                            LocadoraDados.removeLocacao(indice);
                            limpaCampos();
                        }

                        if((indice == maxIndice) && (maxIndice > 0)){
                            DisponibilizaVeiculo();
                            LocadoraDados.removeLocacao(indice);
                            indice --;
                            preencheCampos(indice);
                        }
                    }

                }
            }else{

            }
        }
    }//GEN-LAST:event_btExcliurActionPerformed

    private void btAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnteriorActionPerformed

        int indice;
        try{
            indice = Integer.parseInt(lblIndice.getText());
        }catch(java.lang.NumberFormatException e){
            indice = LocadoraDados.getLocacao().size();
        }

        if (LocadoraDados.getLocacao().size() == 0){
            JOptionPane.showMessageDialog(null, "Esse é o primeiro registro");
        }else{

            if(indice <= 0){
                JOptionPane.showMessageDialog(null, "Esse é o primeiro registro");
            }else{
                indice --;
                preencheCampos(indice);  //Chama o metodo para preencher os campos
            }
        }
    }//GEN-LAST:event_btAnteriorActionPerformed

    private void btProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProximoActionPerformed
        int indice;
        try{
            indice = Integer.parseInt(lblIndice.getText());
        }catch(java.lang.NumberFormatException e){
            indice = LocadoraDados.getLocacao().size();
        }

        if(indice+1 >= LocadoraDados.getLocacao().size()){
            JOptionPane.showMessageDialog(null, "Esse é o ultimo registro");
        }else{
            indice++;
            preencheCampos(indice);
        }
    }//GEN-LAST:event_btProximoActionPerformed

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
      
    }//GEN-LAST:event_formFocusLost

    private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
        
    }//GEN-LAST:event_formInternalFrameDeactivated

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        int indiceCli = comboCliente.getSelectedIndex();
        int indiceVeiculo = comboVeiculo.getSelectedIndex();
        
        comboCliente.removeAllItems();
        comboVeiculo.removeAllItems();
        
        comboCliente.addItem("");
        comboVeiculo.addItem("");
        
        for (int i=0; i < LocadoraDados.getClientes().size(); i++) {            
         comboCliente.addItem(LocadoraDados.getClientes().get(i).getNome()+ " | " + String.valueOf(LocadoraDados.getClientes().get(i).getID())); 
         
        }
        
        for (int i=0; i < LocadoraDados.getVeiculos().size(); i++) {            
         comboVeiculo.addItem(LocadoraDados.getVeiculos().get(i).getDescricao()+ " | " + String.valueOf(LocadoraDados.getVeiculos().get(i).getCodigoAuto())); 
         
        }
        
        if(getIndice() == -1){
        comboCliente.setSelectedIndex(indiceCli);
        comboVeiculo.setSelectedIndex(indiceVeiculo);
        }else{
         comboVeiculo.setSelectedItem(LocadoraDados.getLocacao().get(getIndice()).getVeiculo().getDescricao()+ " | " + String.valueOf(LocadoraDados.getLocacao().get(getIndice()).getVeiculo().getCodigoAuto()));
         comboCliente.setSelectedItem(LocadoraDados.getLocacao().get(getIndice()).getCliente().getNome() +" | " +LocadoraDados.getLocacao().get(getIndice()).getCliente().getID());
        }
    }//GEN-LAST:event_formInternalFrameActivated

    
    
    private void limpaCampos(){
        
        txtDataInicial.setText(null);
        txtDataFinal.setText(null);
        txtDias.setText("1");
        txtValorDesconto.setText("0,00");
        txtValorDiaria.setText("0,00");
        cbSeguro.setSelected(false);
        txtValorTotal.setText("0,00");
        lblIndice.setText("(Novo)");
        lblStatus.setText("(Não Definido)");
        lblcodVeiculo.setText("");
        comboCliente.setSelectedIndex(0);
        comboVeiculo.setSelectedIndex(0);
        lblCli.setText("");
       
        
    }
    
    private int getIndice(){
        int indice = -1;
        try{
            indice = Integer.parseInt(lblIndice.getText());
        }catch(NumberFormatException e){
            
            return -1;
        }
        return indice;
    }
    
    private void calculaDatas(){
        if(txtDataInicial.getText().length() >10){
            txtDataInicial.setText("");
        }else if(txtDataFinal.getText().length() >10){
             txtDataFinal.setText("");
        } 
        try{
            int di, mi, ai;
            di = Integer.parseInt(txtDataInicial.getText().substring(0, 2));
            mi = Integer.parseInt(txtDataInicial.getText().substring(3, 5));
            ai = Integer.parseInt(txtDataInicial.getText().substring(6, 10));
            

            int df, mf, af;
            df = Integer.parseInt(txtDataFinal.getText().substring(0, 2));
            mf = Integer.parseInt(txtDataFinal.getText().substring(3, 5));
            af = Integer.parseInt(txtDataFinal.getText().substring(6, 10));
        
            

            LocalDate inicio = LocalDate.of(ai, mi, di);
            LocalDate fim = LocalDate.of(af, mf, df);
            int intervalo = (int) ChronoUnit.DAYS.between(inicio, fim);
            
            
            
            if(intervalo < 0){
                JOptionPane.showMessageDialog(null, "A data inicial deve ser menor que a final");
                txtDias.setText("");
            }else{
                
                if(intervalo <= 0){
                    intervalo = 1;
                }
                
                
                txtDias.setText(String.valueOf(intervalo));
            }
            
            
            
            
        }catch(java.lang.StringIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null, "Datas inválidas");
            txtDias.setText("");
        }catch(java.time.DateTimeException e){
            JOptionPane.showMessageDialog(null, "Formato de data inválido");
            txtDias.setText("");
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Formato de data inválido");
        }
    }
    
    
    private void preencheCampos(int indice){
        DecimalFormat df = new DecimalFormat("0.00");
        df.setRoundingMode(RoundingMode.HALF_DOWN);
        
        if(indice < 0){
            
        }else{
            comboCliente.setSelectedItem(LocadoraDados.getLocacao().get(indice).getCliente().getNome() +" | " +LocadoraDados.getLocacao().get(indice).getCliente().getID());
            lblIndice.setText(String.valueOf(indice));
            lblCli.setText(LocadoraDados.getLocacao().get(indice).getCliente().getNome() +" | ID: " +LocadoraDados.getLocacao().get(indice).getCliente().getID());
            comboVeiculo.setSelectedItem(LocadoraDados.getLocacao().get(indice).getVeiculo().getDescricao()+ " | " + String.valueOf(LocadoraDados.getLocacao().get(indice).getVeiculo().getCodigoAuto()));
            txtDataInicial.setText(LocadoraDados.getLocacao().get(indice).getDataIni());
            txtDataFinal.setText(LocadoraDados.getLocacao().get(indice).getDataFin());
            txtDias.setText(String.valueOf(LocadoraDados.getLocacao().get(indice).getDias()));
            txtValorDiaria.setText(String.valueOf(LocadoraDados.getLocacao().get(indice).getVeiculo().getValorDiaria()));
            cbSeguro.setSelected(LocadoraDados.getLocacao().get(indice).isPossuiSeguro());
            txtValorTotal.setText(String.valueOf(df.format(LocadoraDados.getLocacao().get(indice).getValorLocacao()))); //O valor é arredondado
            txtValorSeguro.setText(String.valueOf(df.format(LocadoraDados.getLocacao().get(indice).getValorSeguro())));  //O valor é arredondado
            txtValorDesconto.setText(String.valueOf(df.format(LocadoraDados.getLocacao().get(indice).getDesconto()))); //O valor é arredondado
            lblStatus.setText(LocadoraDados.getLocacao().get(indice).getStatus());
            lblcodVeiculo.setText(String.valueOf(LocadoraDados.getLocacao().get(indice).getVeiculo().getCodigoAuto()));

            double totalDia = LocadoraDados.getLocacao().get(indice).getValorDiaria() * LocadoraDados.getLocacao().get(indice).getDias();
            double totalSeguro = LocadoraDados.getLocacao().get(indice).getValorSeguro() * LocadoraDados.getLocacao().get(indice).getDias();
            double totalBruto = totalDia + totalSeguro;

            lblTotalDiaria.setText(df.format(LocadoraDados.getLocacao().get(indice).getDias() * LocadoraDados.getLocacao().get(indice).getVeiculo().getValorDiaria()));
            lblTotalSeguro.setText(df.format(LocadoraDados.getLocacao().get(indice).getDias() * LocadoraDados.getLocacao().get(indice).getValorSeguro()));
            lblDescontoReal.setText(df.format(totalBruto * (LocadoraDados.getLocacao().get(indice).getDesconto()/100)));
        }
    }
    
    private void DisponibilizaVeiculo(){
        int indiceVeiculo = LocadoraDados.localizaVeiculoPorCodigo(LocadoraDados.getLocacao().get(getIndice()).getVeiculo().getCodigoAuto());  //Pegando o código do veiculo
            
            if(indiceVeiculo == -1){
                        
            }else{
                LocadoraDados.getVeiculos().get(indiceVeiculo).setDisponivel(true);
            }
    }
    
    
    public int getCodVeiculo(){
        int codVeiculo = -1;
        try{
            codVeiculo =  Integer.parseInt(lblcodVeiculo.getText());
        }catch(NumberFormatException e){
            codVeiculo = -1;         
        }
        return codVeiculo;
    }
    
    
    /**
     * 
     * @return Retorna true: Caso o statos estja como LOCADO e False caso não esteja locado
     */
    private boolean checaStatusLocacao(){
        
        if(LocadoraDados.getLocacao().get(getIndice()).getStatus().equals("LOCADO")){
            return true;
        }else{
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btCadastro;
    private javax.swing.JButton btExcliur;
    private javax.swing.JButton btNova;
    private javax.swing.JButton btProximo;
    private javax.swing.JButton btReceber;
    private javax.swing.JButton btSalvar;
    private javax.swing.JCheckBox cbSeguro;
    private javax.swing.JComboBox<String> comboCliente;
    private javax.swing.JComboBox<String> comboVeiculo;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblCli;
    private javax.swing.JLabel lblDescontoReal;
    private javax.swing.JLabel lblIndice;
    private javax.swing.JLabel lblPossuiPartida;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTotalDiaria;
    private javax.swing.JLabel lblTotalSeguro;
    private javax.swing.JLabel lblcodVeiculo;
    private javax.swing.JPanel painelCentral;
    private javax.swing.JPanel painelDadosCliente;
    private javax.swing.JPanel painelVeiculo;
    private javax.swing.JFormattedTextField txtDataFinal;
    private javax.swing.JFormattedTextField txtDataInicial;
    private javax.swing.JTextField txtDias;
    private javax.swing.JTextField txtNumPassageiros;
    private javax.swing.JLabel txtTipoVeiculo;
    private javax.swing.JTextField txtValorDesconto;
    private javax.swing.JTextField txtValorDiaria;
    private javax.swing.JTextField txtValorSeguro;
    private javax.swing.JLabel txtValorTotal;
    // End of variables declaration//GEN-END:variables
}
